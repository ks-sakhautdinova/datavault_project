image: registry.gitlab.com/ks-sakhautdinova/datavault_project/dbt-sqlserver:1.1

stages:
  - test
  - deploy

variables:
  WORK_DIR: "$CI_PROJECT_DIR/demo_dv_dbt"
  DBT_PROFILES_DIR: "$WORK_DIR"

default:
  before_script:
    - cd "$WORK_DIR"
    - echo "=== Рабочая директория ==="
    - pwd
    - ls -la

# Простой тест подключения к БД
test_connection:
  tags: [linux, dbt, sqlserver]
  stage: test
  only:
    - dev
    - main
  variables:
    DBT_TARGET: "dev"
  script:
    - echo "=== Информация о подключении ==="
    - echo "Host: $DBT_HOST"
    - echo "Port: $DBT_PORT"
    - echo "Database: $DEV_DBT_DATABASE"
    - echo "User: $DEV_DBT_USER"
    - echo "=== Установка зависимостей dbt ==="
    - dbt deps
    - echo "=== Проверка подключения через dbt debug ==="
    - dbt debug --profiles-dir "$DBT_PROFILES_DIR" --target dev
  allow_failure: true

# Deploy для ветки dev
deploy_dev:
  tags: [linux, dbt, sqlserver]
  stage: deploy
  only:
    - dev
  variables:
    DBT_TARGET: "dev"
  script:
    - echo "=== Запуск dbt для DEV окружения ==="
    - dbt deps
    - dbt run --target dev --profiles-dir "$DBT_PROFILES_DIR"
    - dbt test --target dev --profiles-dir "$DBT_PROFILES_DIR"
  artifacts:
    when: always
    paths:
      - demo_dv_dbt/target/

# Deploy для ветки main
deploy_prod:
  tags: [linux, dbt, sqlserver]
  stage: deploy
  only:
    - main
  variables:
    DBT_TARGET: "prod"
  script:
    - echo "=== Запуск dbt для PROD окружения ==="
    - dbt deps
    - dbt run --target prod --profiles-dir "$DBT_PROFILES_DIR"
    - dbt test --target prod --profiles-dir "$DBT_PROFILES_DIR"
  when: manual  # Требует ручного запуска
  artifacts:
    when: always
    paths:
      - demo_dv_dbt/target/