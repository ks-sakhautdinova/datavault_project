image: registry.gitlab.com/ks-sakhautdinova/datavault_project/dbt-sqlserver:1.1

stages: [ci, deploy]

variables:
  DBT_PROFILES_DIR: "$CI_PROJECT_DIR/.dbt"
  DBT_THREADS: "4"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - dbt_packages/

# 1) Slim CI в Merge Request: только измененные модели в изолированную схему
mr_slim_ci:
  stage: ci
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    DBT_TARGET: "dev"
    DBT_HOST: "$DBT_HOST"
    DBT_PORT: "$DBT_PORT"
    DEV_DBT_DATABASE: "$DEV_DBT_DATABASE"
    DEV_DBT_SCHEMA: "$DEV_DBT_SCHEMA"
    DEV_DBT_USER: "$DEV_DBT_USER"
    DEV_DBT_PASSWORD: "$DEV_DBT_PASSWORD"
  script:
    - dbt deps
    - mkdir -p state
    # тянем baseline манифест с последнего деплоя dev (если он уже был)
    - |
      curl -sfL -H "JOB-TOKEN: $CI_JOB_TOKEN" \
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/artifacts/dev/raw/state/manifest.json?job=deploy_dev" \
        -o state/manifest.json || echo "no state"
    # временная схема для MR: staging_pr<номер MR>
    - export DEV_DBT_SCHEMA="${DEV_DBT_SCHEMA}_pr${CI_MERGE_REQUEST_IID}"
    # slim CI: если есть state — собираем только изменённые модели, иначе один раз полный build
    - |
      if [ -f state/manifest.json ]; then
        dbt build --select state:modified+ --defer --state state --target dev --profiles-dir "$DBT_PROFILES_DIR"
      else
        dbt build --target dev --profiles-dir "$DBT_PROFILES_DIR"
      fi

# 2) Полный деплой в dev + публикация baseline manifest.json
deploy_dev:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  variables:
    DBT_TARGET: "dev"
    DBT_HOST: "$DBT_HOST"
    DBT_PORT: "$DBT_PORT"
    DEV_DBT_DATABASE: "$DEV_DBT_DATABASE"
    DEV_DBT_SCHEMA: "$DEV_DBT_SCHEMA"
    DEV_DBT_USER: "$DEV_DBT_USER"
    DEV_DBT_PASSWORD: "$DEV_DBT_PASSWORD"
  script:
    - dbt deps
    - dbt build --target dev --profiles-dir "$DBT_PROFILES_DIR"
    - mkdir -p state && cp target/manifest.json state/manifest.json
  artifacts:
    paths:
      - target/
      - state/manifest.json